# SPR (Schwarzer et al, 2021)
import dopamine.jax.networks
import dopamine.discrete_domains.gym_lib
import dopamine.discrete_domains.run_experiment
import dopamine.replay_memory.prioritized_replay_buffer
import bigger_better_faster.bbf.spr_networksimport bigger_better_faster.bbf.agents.spr_agentimport bigger_better_faster.bbf.replay_memimport bigger_better_faster.bbf.ory.subsequence_replay_buffer.spr_networks
import bigger_better_faster.bbf.spr_networksimport bigger_better_faster.bbf.agents.spr_agentimport bigger_better_faster.bbf.replay_memimport bigger_better_faster.bbf.ory.subsequence_replay_buffer.agents.spr_agent
import bigger_better_faster.bbf.spr_networksimport bigger_better_faster.bbf.agents.spr_agentimport bigger_better_faster.bbf.replay_memimport bigger_better_faster.bbf.ory.subsequence_replay_buffer.replay_memory.subsequence_replay_buffer

JaxDQNAgent.gamma = 0.99
JaxDQNAgent.min_replay_history = 2000 
JaxDQNAgent.update_period = 1
JaxDQNAgent.target_update_period = 1
JaxDQNAgent.epsilon_train = 0.00
JaxDQNAgent.epsilon_eval = 0.001
JaxDQNAgent.epsilon_decay_period = 2001    # DrQ
JaxDQNAgent.optimizer = 'adam'

# Originally SR-SPR used noisy, but it's slower and hurts performance.
BBFAgent.noisy = False 
BBFAgent.dueling = True
BBFAgent.double_dqn = True
BBFAgent.distributional = True
BBFAgent.num_atoms = 51
BBFAgent.reset_every = 5_000 # Change if you change the replay ratio
BBFAgent.shrink_perturb_keys = "encoder,transition_model"
BBFAgent.shrink_factor = 0.8
BBFAgent.perturb_factor = 0.2
BBFAgent.no_resets_after = 100_000 # Need to change if training longer
BBFAgent.log_every = 100
BBFAgent.replay_ratio = 256
BBFAgent.batches_to_group = 8
BBFAgent.batch_size = 32
BBFAgent.spr_weight = 5
BBFAgent.jumps = 5
BBFAgent.data_augmentation = True
BBFAgent.replay_scheme = 'prioritized'
BBFAgent.half_precision = False
BBFAgent.network    = @bbf.spr_networks.RainbowDQNNetwork
BBFAgent.epsilon_fn = @jax.agents.dqn.dqn_agent.linearly_decaying_epsilon
BBFAgent.learning_rate = 0.0001
BBFAgent.encoder_learning_rate = 0.0001
BBFAgent.target_update_tau = 0.005
BBFAgent.target_action_selection = True

bbf.spr_networks.RainbowDQNNetwork.renormalize = True
bbf.spr_networks.RainbowDQNNetwork.hidden_dim = 512
bbf.spr_networks.RainbowDQNNetwork.encoder_type = "cnn"
bbf.spr_networks.RainbowDQNNetwork.width_scale = 1

# Note these parameters are from DER (van Hasselt et al, 2019)
bbf.agents.spr_agent.create_scaling_optimizer.eps = 0.00015
bbf.agents.spr_agent.create_scaling_optimizer.weight_decay = 0.0

atari_lib.create_atari_environment.game_name = 'ChopperCommand'

# Atari 100K benchmark doesn't use sticky actions.
atari_lib.create_atari_environment.sticky_actions = False
AtariPreprocessing.terminal_on_life_loss = True
Runner.num_iterations = 1
Runner.training_steps = 100000    # agent steps
DataEfficientAtariRunner.num_eval_episodes = 100    # agent episodes
DataEfficientAtariRunner.num_eval_envs = 100    # agent episodes
DataEfficientAtariRunner.num_train_envs = 1    # agent episodes
DataEfficientAtariRunner.max_noops = 30
Runner.max_steps_per_episode = 27000    # agent steps

bbf.replay_memory.subsequence_replay_buffer.PrioritizedJaxSubsequenceParallelEnvReplayBuffer.replay_capacity = 200000
bbf.replay_memory.subsequence_replay_buffer.PrioritizedJaxSubsequenceParallelEnvReplayBuffer.n_envs = 1    # agent episodes
bbf.replay_memory.subsequence_replay_buffer.JaxSubsequenceParallelEnvReplayBuffer.replay_capacity = 200000
bbf.replay_memory.subsequence_replay_buffer.JaxSubsequenceParallelEnvReplayBuffer.n_envs = 1    # agent episodes

